#!/usr/bin/env python
#       Copyright 2011 Hung Nguyen <hungnv@opensource.com.vn>
#       
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 2 of the License, or
#       (at your option) any later version.
#       
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#       
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#       MA 02110-1301, USA.
import sys, os 
import reader

def main():
   reader._worker() 


if __name__ == "__main__":
	"""
	Run our agen as daemon
	"""
	stdin   ="/dev/null"
	stderr  ="/dev/null"
	stdout ="/dev/null"
	pidfile = "/tmp/agent.pid"
	try: 
		pid = os.fork() 
		if pid > 0:
			sys.exit(0) 
	except OSError, e: 
		print >>sys.stderr, "fork #1 failed: %d (%s)" % (e.errno, e.strerror) 
		sys.exit(1)

	# decouple from parent environment
	os.chdir(".") 
	os.setsid() 
	os.umask(0) 
	sys.stdout.flush() 
	sys.stderr.flush() 
	si = open(stdin, 'r') 
	so = open(stdout, 'a+') 
	se = open(stderr, 'a+', 0)
	print si.fileno() 
	print sys.stdin.fileno() 
	os.dup2(int(si.fileno()), int(sys.stdin.fileno()))
	os.dup2(int(so.fileno()), int(sys.stdout.fileno()) ) 
	os.dup2( int (se.fileno() ), int (sys.stderr.fileno()) ) 
	pid = str(os.getpid()) 
	file(pidfile,'w+').write("%s\n" % pid)
	try: 
		pid = os.fork() 
		if pid > 0:
			# exit from second parent, print eventual PID before
			print "Daemon PID %d" % pid 
			sys.exit(0) 
	except OSError, e: 
		print >>sys.stderr, "fork #2 failed: %d (%s)" % (e.errno, e.strerror) 
		sys.exit(1) 

	main() 
